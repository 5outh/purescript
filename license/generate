#!/bin/bash
# Generates the LICENSE file and prints it to standard output.
# Example use:
#
#   ./license/generate > LICENSE
#

set -e              # exit on error
set -u              # exit on undefined variable
set -o pipefail     # propagate nonzero exit codes through pipelines

if ! which cabal-dependency-licenses >/dev/null; then
    echo "$0: the program 'cabal-dependency-licenses' is required." >&2
    echo "$0: see Hackage: https://hackage.haskell.org/package/cabal-dependency-licenses" >&2
    exit 1
fi

echo_header() {
    cat license/header.txt
}

echo_deps_names() {
    cabal-dependency-licenses \
        | grep '^- ' | sed 's/^..//' | sort -h
}

echo_deps_licenses() {
  while read dep; do
      echo "fetching LICENSE for: ${dep}" >&2
      echo "${dep} LICENSE file:"
      echo ""
      curl --silent "https://hackage.haskell.org/package/${dep}/src/LICENSE" \
          | sed 's/^/  /g' # indent by 2 characters
      echo ""
  done
}

echo_deps_names > license/tmp/deps.txt

echo_header
echo ""
sed <license/tmp/deps.txt 's/^/  /'
echo ""
echo_deps_licenses <license/tmp/deps.txt
